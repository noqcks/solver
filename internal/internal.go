/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: internal/sat.i

package internal

/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stdint.h>


typedef long long intgo;
typedef unsigned long long uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;


typedef long long swig_type_1;
typedef long long swig_type_2;
typedef long long swig_type_3;
typedef long long swig_type_4;
typedef long long swig_type_5;
typedef long long swig_type_6;
typedef _goslice_ swig_type_7;
typedef _gostring_ swig_type_8;
typedef _goslice_ swig_type_9;
typedef _goslice_ swig_type_10;
typedef _goslice_ swig_type_11;
typedef _gostring_ swig_type_12;
typedef _goslice_ swig_type_13;
typedef _gostring_ swig_type_14;
typedef _goslice_ swig_type_15;
typedef _gostring_ swig_type_16;
typedef _goslice_ swig_type_17;
typedef _goslice_ swig_type_18;
extern void _wrap_Swig_free_internal_0eb8ac65aa8fcab2(uintptr_t arg1);
extern uintptr_t _wrap_Swig_malloc_internal_0eb8ac65aa8fcab2(swig_intgo arg1);
extern uintptr_t _wrap__swig_NewDirectorSolutionCallbackSolutionCallback_internal_0eb8ac65aa8fcab2(int);
extern void _wrap_DeleteDirectorSolutionCallback_internal_0eb8ac65aa8fcab2(uintptr_t arg1);
extern void _wrap_delete_SolutionCallback_internal_0eb8ac65aa8fcab2(uintptr_t arg1);
extern void _wrap_SolutionCallback_OnSolutionCallback_internal_0eb8ac65aa8fcab2(uintptr_t arg1);
extern swig_type_1 _wrap_SolutionCallback_NumBooleans_internal_0eb8ac65aa8fcab2(uintptr_t arg1);
extern swig_type_2 _wrap_SolutionCallback_NumBranches_internal_0eb8ac65aa8fcab2(uintptr_t arg1);
extern swig_type_3 _wrap_SolutionCallback_NumConflicts_internal_0eb8ac65aa8fcab2(uintptr_t arg1);
extern swig_type_4 _wrap_SolutionCallback_NumBinaryPropagations_internal_0eb8ac65aa8fcab2(uintptr_t arg1);
extern swig_type_5 _wrap_SolutionCallback_NumIntegerPropagations_internal_0eb8ac65aa8fcab2(uintptr_t arg1);
extern double _wrap_SolutionCallback_WallTime_internal_0eb8ac65aa8fcab2(uintptr_t arg1);
extern double _wrap_SolutionCallback_UserTime_internal_0eb8ac65aa8fcab2(uintptr_t arg1);
extern double _wrap_SolutionCallback_ObjectiveValue_internal_0eb8ac65aa8fcab2(uintptr_t arg1);
extern double _wrap_SolutionCallback_BestObjectiveBound_internal_0eb8ac65aa8fcab2(uintptr_t arg1);
extern swig_type_6 _wrap_SolutionCallback_SolutionIntegerValue_internal_0eb8ac65aa8fcab2(uintptr_t arg1, swig_intgo arg2);
extern _Bool _wrap_SolutionCallback_SolutionBooleanValue_internal_0eb8ac65aa8fcab2(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_SolutionCallback_StopSearch_internal_0eb8ac65aa8fcab2(uintptr_t arg1);
extern swig_type_7 _wrap_SolutionCallback_Response_internal_0eb8ac65aa8fcab2(uintptr_t arg1);
extern _Bool _wrap_SolutionCallback_HasResponse_internal_0eb8ac65aa8fcab2(uintptr_t arg1);
extern uintptr_t _wrap__swig_NewDirectorLogCallbackLogCallback_internal_0eb8ac65aa8fcab2(int);
extern void _wrap_DeleteDirectorLogCallback_internal_0eb8ac65aa8fcab2(uintptr_t arg1);
extern void _wrap_delete_LogCallback_internal_0eb8ac65aa8fcab2(uintptr_t arg1);
extern void _wrap_LogCallback_NewMessage_internal_0eb8ac65aa8fcab2(uintptr_t arg1, swig_type_8 arg2);
extern void _wrap_SolveWrapper_SetParameters_internal_0eb8ac65aa8fcab2(uintptr_t arg1, swig_type_9 arg2);
extern void _wrap_SolveWrapper_AddSolutionCallback_internal_0eb8ac65aa8fcab2(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_SolveWrapper_ClearSolutionCallback_internal_0eb8ac65aa8fcab2(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_SolveWrapper_AddLogCallback_internal_0eb8ac65aa8fcab2(uintptr_t arg1, uintptr_t arg2);
extern swig_type_10 _wrap_SolveWrapper_Solve_internal_0eb8ac65aa8fcab2(uintptr_t arg1, swig_type_11 arg2);
extern void _wrap_SolveWrapper_StopSearch_internal_0eb8ac65aa8fcab2(uintptr_t arg1);
extern uintptr_t _wrap_new_SolveWrapper_internal_0eb8ac65aa8fcab2(void);
extern void _wrap_delete_SolveWrapper_internal_0eb8ac65aa8fcab2(uintptr_t arg1);
extern swig_type_12 _wrap_CpSatHelper_ModelStats_internal_0eb8ac65aa8fcab2(swig_type_13 arg1);
extern swig_type_14 _wrap_CpSatHelper_SolverResponseStats_internal_0eb8ac65aa8fcab2(swig_type_15 arg1);
extern swig_type_16 _wrap_CpSatHelper_ValidateModel_internal_0eb8ac65aa8fcab2(swig_type_17 arg1);
extern uintptr_t _wrap_CpSatHelper_VariableDomain_internal_0eb8ac65aa8fcab2(swig_type_18 arg1);
extern uintptr_t _wrap_new_CpSatHelper_internal_0eb8ac65aa8fcab2(void);
extern void _wrap_delete_CpSatHelper_internal_0eb8ac65aa8fcab2(uintptr_t arg1);
#undef intgo
*/
import "C"

import (
	"fmt"
	_ "runtime/cgo"
	"sync"
	"unsafe"

	"github.com/golang/protobuf/proto"
	"github.com/noqcks/solver/internal/pb"
)

type _ unsafe.Pointer

var Swig_escape_always_false bool
var Swig_escape_val interface{}

type _swig_fnptr *byte
type _swig_memberptr *byte

type _ sync.Mutex

type swig_goslice struct {
	arr uintptr
	n   int
	c   int
}

func swigCopyIntSlice(intSlice *[]int) []int {
	newSlice := make([]int, len(*intSlice))
	for i := range newSlice {
		newSlice[i] = (*intSlice)[i]
	}
	p := *(*swig_goslice)(unsafe.Pointer(intSlice))
	Swig_free(p.arr)
	return newSlice
}

func swigCopyintSlice(s *[]int) []int {
	newSlice := make([]int, len(*s))
	for i := range newSlice {
		newSlice[i] = (*s)[i]
	}
	p := *(*swig_goslice)(unsafe.Pointer(s))
	Swig_free(p.arr)
	return newSlice
}

type intSliceWithPointer struct {
	slice []int
	ptr   uintptr
}

func swigCopyint64_tSlice(s *[]int64) []int64 {
	newSlice := make([]int64, len(*s))
	for i := range newSlice {
		newSlice[i] = (*s)[i]
	}
	p := *(*swig_goslice)(unsafe.Pointer(s))
	Swig_free(p.arr)
	return newSlice
}

type int64_tSliceWithPointer struct {
	slice []int64
	ptr   uintptr
}

type swig_gostring struct {
	p uintptr
	n int
}

func swigCopyString(s string) string {
	p := *(*swig_gostring)(unsafe.Pointer(&s))
	r := string((*[0x7fffffff]byte)(unsafe.Pointer(p.p))[:p.n])
	Swig_free(p.p)
	return r
}

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_internal_0eb8ac65aa8fcab2(C.uintptr_t(_swig_i_0))
}

func Swig_malloc(arg1 int) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_Swig_malloc_internal_0eb8ac65aa8fcab2(C.swig_intgo(_swig_i_0)))
	return swig_r
}

type _swig_DirectorSolutionCallback struct {
	SwigcptrSolutionCallback
	v interface{}
}

func (p *_swig_DirectorSolutionCallback) Swigcptr() uintptr {
	return p.SwigcptrSolutionCallback.Swigcptr()
}

func (p *_swig_DirectorSolutionCallback) SwigIsSolutionCallback() {
}

func (p *_swig_DirectorSolutionCallback) DirectorInterface() interface{} {
	return p.v
}

func NewDirectorSolutionCallback(v interface{}) SolutionCallback {
	p := &_swig_DirectorSolutionCallback{0, v}
	p.SwigcptrSolutionCallback = SwigcptrSolutionCallback(C._wrap__swig_NewDirectorSolutionCallbackSolutionCallback_internal_0eb8ac65aa8fcab2(C.int(swigDirectorAdd(p))))
	return p
}

func DeleteDirectorSolutionCallback(arg1 SolutionCallback) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_DeleteDirectorSolutionCallback_internal_0eb8ac65aa8fcab2(C.uintptr_t(_swig_i_0))
}

//export Swiggo_DeleteDirector_SolutionCallback_internal_0eb8ac65aa8fcab2
func Swiggo_DeleteDirector_SolutionCallback_internal_0eb8ac65aa8fcab2(c int) {
	swigDirectorLookup(c).(*_swig_DirectorSolutionCallback).SwigcptrSolutionCallback = 0
	swigDirectorDelete(c)
}

type _swig_DirectorInterfaceSolutionCallbackOnSolutionCallback interface {
	OnSolutionCallback()
}

func (swig_p *_swig_DirectorSolutionCallback) OnSolutionCallback() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceSolutionCallbackOnSolutionCallback); swig_ok {
		swig_g.OnSolutionCallback()
		return
	}
	panic("call to pure virtual method")
}

//export Swig_DirectorSolutionCallback_callback_OnSolutionCallback_internal_0eb8ac65aa8fcab2
func Swig_DirectorSolutionCallback_callback_OnSolutionCallback_internal_0eb8ac65aa8fcab2(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorSolutionCallback)
	swig_p.OnSolutionCallback()
}

type SwigcptrSolutionCallback uintptr

func (p SwigcptrSolutionCallback) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSolutionCallback) SwigIsSolutionCallback() {
}

func (p SwigcptrSolutionCallback) DirectorInterface() interface{} {
	return nil
}

func DeleteSolutionCallback(arg1 SolutionCallback) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_SolutionCallback_internal_0eb8ac65aa8fcab2(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSolutionCallback) OnSolutionCallback() {
	_swig_i_0 := arg1
	C._wrap_SolutionCallback_OnSolutionCallback_internal_0eb8ac65aa8fcab2(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSolutionCallback) NumBooleans() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_SolutionCallback_NumBooleans_internal_0eb8ac65aa8fcab2(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolutionCallback) NumBranches() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_SolutionCallback_NumBranches_internal_0eb8ac65aa8fcab2(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolutionCallback) NumConflicts() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_SolutionCallback_NumConflicts_internal_0eb8ac65aa8fcab2(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolutionCallback) NumBinaryPropagations() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_SolutionCallback_NumBinaryPropagations_internal_0eb8ac65aa8fcab2(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolutionCallback) NumIntegerPropagations() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_SolutionCallback_NumIntegerPropagations_internal_0eb8ac65aa8fcab2(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolutionCallback) WallTime() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_SolutionCallback_WallTime_internal_0eb8ac65aa8fcab2(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolutionCallback) UserTime() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_SolutionCallback_UserTime_internal_0eb8ac65aa8fcab2(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolutionCallback) ObjectiveValue() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_SolutionCallback_ObjectiveValue_internal_0eb8ac65aa8fcab2(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolutionCallback) BestObjectiveBound() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_SolutionCallback_BestObjectiveBound_internal_0eb8ac65aa8fcab2(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolutionCallback) SolutionIntegerValue(arg2 int) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_SolutionCallback_SolutionIntegerValue_internal_0eb8ac65aa8fcab2(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrSolutionCallback) SolutionBooleanValue(arg2 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_SolutionCallback_SolutionBooleanValue_internal_0eb8ac65aa8fcab2(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrSolutionCallback) StopSearch() {
	_swig_i_0 := arg1
	C._wrap_SolutionCallback_StopSearch_internal_0eb8ac65aa8fcab2(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSolutionCallback) Response() (_swig_ret pb.CpSolverResponse) {
	var swig_r []byte
	_swig_i_0 := arg1
	swig_r_p := C._wrap_SolutionCallback_Response_internal_0eb8ac65aa8fcab2(C.uintptr_t(_swig_i_0))
	swig_r = *(*[]byte)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 pb.CpSolverResponse
	{
		// go
		if err := proto.Unmarshal(swig_r, &swig_r_1); err != nil {
			panic(fmt.Sprintf("Unable to parse pb.CpSolverResponse protocol message: %v", err))
		}

		// free dynamic mem
		p := *(*swig_goslice)(unsafe.Pointer(&swig_r))
		Swig_free(p.arr)
	}
	return swig_r_1
}

func (arg1 SwigcptrSolutionCallback) HasResponse() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_SolutionCallback_HasResponse_internal_0eb8ac65aa8fcab2(C.uintptr_t(_swig_i_0)))
	return swig_r
}

type SolutionCallback interface {
	Swigcptr() uintptr
	SwigIsSolutionCallback()
	DirectorInterface() interface{}
	OnSolutionCallback()
	NumBooleans() (_swig_ret int64)
	NumBranches() (_swig_ret int64)
	NumConflicts() (_swig_ret int64)
	NumBinaryPropagations() (_swig_ret int64)
	NumIntegerPropagations() (_swig_ret int64)
	WallTime() (_swig_ret float64)
	UserTime() (_swig_ret float64)
	ObjectiveValue() (_swig_ret float64)
	BestObjectiveBound() (_swig_ret float64)
	SolutionIntegerValue(arg2 int) (_swig_ret int64)
	SolutionBooleanValue(arg2 int) (_swig_ret bool)
	StopSearch()
	Response() (_swig_ret pb.CpSolverResponse)
	HasResponse() (_swig_ret bool)
}

type _swig_DirectorLogCallback struct {
	SwigcptrLogCallback
	v interface{}
}

func (p *_swig_DirectorLogCallback) Swigcptr() uintptr {
	return p.SwigcptrLogCallback.Swigcptr()
}

func (p *_swig_DirectorLogCallback) SwigIsLogCallback() {
}

func (p *_swig_DirectorLogCallback) DirectorInterface() interface{} {
	return p.v
}

func NewDirectorLogCallback(v interface{}) LogCallback {
	p := &_swig_DirectorLogCallback{0, v}
	p.SwigcptrLogCallback = SwigcptrLogCallback(C._wrap__swig_NewDirectorLogCallbackLogCallback_internal_0eb8ac65aa8fcab2(C.int(swigDirectorAdd(p))))
	return p
}

func DeleteDirectorLogCallback(arg1 LogCallback) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_DeleteDirectorLogCallback_internal_0eb8ac65aa8fcab2(C.uintptr_t(_swig_i_0))
}

//export Swiggo_DeleteDirector_LogCallback_internal_0eb8ac65aa8fcab2
func Swiggo_DeleteDirector_LogCallback_internal_0eb8ac65aa8fcab2(c int) {
	swigDirectorLookup(c).(*_swig_DirectorLogCallback).SwigcptrLogCallback = 0
	swigDirectorDelete(c)
}

type _swig_DirectorInterfaceLogCallbackNewMessage interface {
	NewMessage(string)
}

func (swig_p *_swig_DirectorLogCallback) NewMessage(message string) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceLogCallbackNewMessage); swig_ok {
		swig_g.NewMessage(message)
		return
	}
	panic("call to pure virtual method")
}

//export Swig_DirectorLogCallback_callback_NewMessage_internal_0eb8ac65aa8fcab2
func Swig_DirectorLogCallback_callback_NewMessage_internal_0eb8ac65aa8fcab2(swig_c int, message string) {
	var _swig_i_0 string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorLogCallback)
	_swig_i_0 = swigCopyString(message)
	swig_p.NewMessage(_swig_i_0)
}

type SwigcptrLogCallback uintptr

func (p SwigcptrLogCallback) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrLogCallback) SwigIsLogCallback() {
}

func (p SwigcptrLogCallback) DirectorInterface() interface{} {
	return nil
}

func DeleteLogCallback(arg1 LogCallback) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_LogCallback_internal_0eb8ac65aa8fcab2(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrLogCallback) NewMessage(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_LogCallback_NewMessage_internal_0eb8ac65aa8fcab2(C.uintptr_t(_swig_i_0), *(*C.swig_type_8)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

type LogCallback interface {
	Swigcptr() uintptr
	SwigIsLogCallback()
	DirectorInterface() interface{}
	NewMessage(arg2 string)
}

type SwigcptrSolveWrapper uintptr

func (p SwigcptrSolveWrapper) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSolveWrapper) SwigIsSolveWrapper() {
}

func (arg1 SwigcptrSolveWrapper) SetParameters(arg2 pb.SatParameters) {
	_swig_i_0 := arg1
	var _swig_i_1 []byte
	{
		// go
		bytes, err := proto.Marshal(&arg2)
		if err != nil {
			panic(fmt.Sprintf("Unable to convert input to []byte: %v", err))
		}
		_swig_i_1 = bytes
	}
	C._wrap_SolveWrapper_SetParameters_internal_0eb8ac65aa8fcab2(C.uintptr_t(_swig_i_0), *(*C.swig_type_9)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
}

func (arg1 SwigcptrSolveWrapper) AddSolutionCallback(arg2 SolutionCallback) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_SolveWrapper_AddSolutionCallback_internal_0eb8ac65aa8fcab2(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSolveWrapper) ClearSolutionCallback(arg2 SolutionCallback) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_SolveWrapper_ClearSolutionCallback_internal_0eb8ac65aa8fcab2(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSolveWrapper) AddLogCallback(arg2 Std_function_Sl_void_Sp_std_string_SS_const_SA__SP__Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_SolveWrapper_AddLogCallback_internal_0eb8ac65aa8fcab2(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSolveWrapper) Solve(arg2 pb.CpModelProto) (_swig_ret pb.CpSolverResponse) {
	var swig_r []byte
	_swig_i_0 := arg1
	var _swig_i_1 []byte
	{
		// go
		bytes, err := proto.Marshal(&arg2)
		if err != nil {
			panic(fmt.Sprintf("Unable to convert input to []byte: %v", err))
		}
		_swig_i_1 = bytes
	}
	swig_r_p := C._wrap_SolveWrapper_Solve_internal_0eb8ac65aa8fcab2(C.uintptr_t(_swig_i_0), *(*C.swig_type_11)(unsafe.Pointer(&_swig_i_1)))
	swig_r = *(*[]byte)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
	var swig_r_1 pb.CpSolverResponse
	{
		// go
		if err := proto.Unmarshal(swig_r, &swig_r_1); err != nil {
			panic(fmt.Sprintf("Unable to parse pb.CpSolverResponse protocol message: %v", err))
		}

		// free dynamic mem
		p := *(*swig_goslice)(unsafe.Pointer(&swig_r))
		Swig_free(p.arr)
	}
	return swig_r_1
}

func (arg1 SwigcptrSolveWrapper) StopSearch() {
	_swig_i_0 := arg1
	C._wrap_SolveWrapper_StopSearch_internal_0eb8ac65aa8fcab2(C.uintptr_t(_swig_i_0))
}

func NewSolveWrapper() (_swig_ret SolveWrapper) {
	var swig_r SolveWrapper
	swig_r = (SolveWrapper)(SwigcptrSolveWrapper(C._wrap_new_SolveWrapper_internal_0eb8ac65aa8fcab2()))
	return swig_r
}

func DeleteSolveWrapper(arg1 SolveWrapper) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_SolveWrapper_internal_0eb8ac65aa8fcab2(C.uintptr_t(_swig_i_0))
}

type SolveWrapper interface {
	Swigcptr() uintptr
	SwigIsSolveWrapper()
	SetParameters(arg2 pb.SatParameters)
	AddSolutionCallback(arg2 SolutionCallback)
	ClearSolutionCallback(arg2 SolutionCallback)
	AddLogCallback(arg2 Std_function_Sl_void_Sp_std_string_SS_const_SA__SP__Sg_)
	Solve(arg2 pb.CpModelProto) (_swig_ret pb.CpSolverResponse)
	StopSearch()
}

type SwigcptrCpSatHelper uintptr

func (p SwigcptrCpSatHelper) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrCpSatHelper) SwigIsCpSatHelper() {
}

func CpSatHelperModelStats(arg1 pb.CpModelProto) (_swig_ret string) {
	var swig_r string
	var _swig_i_0 []byte
	{
		// go
		bytes, err := proto.Marshal(&arg1)
		if err != nil {
			panic(fmt.Sprintf("Unable to convert input to []byte: %v", err))
		}
		_swig_i_0 = bytes
	}
	swig_r_p := C._wrap_CpSatHelper_ModelStats_internal_0eb8ac65aa8fcab2(*(*C.swig_type_13)(unsafe.Pointer(&_swig_i_0)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_0
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func CpSatHelperSolverResponseStats(arg1 pb.CpSolverResponse) (_swig_ret string) {
	var swig_r string
	var _swig_i_0 []byte
	{
		// go
		bytes, err := proto.Marshal(&arg1)
		if err != nil {
			panic(fmt.Sprintf("Unable to convert input to []byte: %v", err))
		}
		_swig_i_0 = bytes
	}
	swig_r_p := C._wrap_CpSatHelper_SolverResponseStats_internal_0eb8ac65aa8fcab2(*(*C.swig_type_15)(unsafe.Pointer(&_swig_i_0)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_0
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func CpSatHelperValidateModel(arg1 pb.CpModelProto) (_swig_ret string) {
	var swig_r string
	var _swig_i_0 []byte
	{
		// go
		bytes, err := proto.Marshal(&arg1)
		if err != nil {
			panic(fmt.Sprintf("Unable to convert input to []byte: %v", err))
		}
		_swig_i_0 = bytes
	}
	swig_r_p := C._wrap_CpSatHelper_ValidateModel_internal_0eb8ac65aa8fcab2(*(*C.swig_type_17)(unsafe.Pointer(&_swig_i_0)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_0
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func CpSatHelperVariableDomain(arg1 pb.IntegerVariableProto) (_swig_ret Operations_research_Domain) {
	var swig_r Operations_research_Domain
	var _swig_i_0 []byte
	{
		// go
		bytes, err := proto.Marshal(&arg1)
		if err != nil {
			panic(fmt.Sprintf("Unable to convert input to []byte: %v", err))
		}
		_swig_i_0 = bytes
	}
	swig_r = (Operations_research_Domain)(SwigcptrOperations_research_Domain(C._wrap_CpSatHelper_VariableDomain_internal_0eb8ac65aa8fcab2(*(*C.swig_type_18)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_0
	}
	return swig_r
}

func NewCpSatHelper() (_swig_ret CpSatHelper) {
	var swig_r CpSatHelper
	swig_r = (CpSatHelper)(SwigcptrCpSatHelper(C._wrap_new_CpSatHelper_internal_0eb8ac65aa8fcab2()))
	return swig_r
}

func DeleteCpSatHelper(arg1 CpSatHelper) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_CpSatHelper_internal_0eb8ac65aa8fcab2(C.uintptr_t(_swig_i_0))
}

type CpSatHelper interface {
	Swigcptr() uintptr
	SwigIsCpSatHelper()
}

type SwigcptrOperations_research_Domain uintptr
type Operations_research_Domain interface {
	Swigcptr() uintptr
}

func (p SwigcptrOperations_research_Domain) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_function_Sl_void_Sp_std_string_SS_const_SA__SP__Sg_ uintptr
type Std_function_Sl_void_Sp_std_string_SS_const_SA__SP__Sg_ interface {
	Swigcptr() uintptr
}

func (p SwigcptrStd_function_Sl_void_Sp_std_string_SS_const_SA__SP__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

var swigDirectorTrack struct {
	sync.Mutex
	m map[int]interface{}
	c int
}

func swigDirectorAdd(v interface{}) int {
	swigDirectorTrack.Lock()
	defer swigDirectorTrack.Unlock()
	if swigDirectorTrack.m == nil {
		swigDirectorTrack.m = make(map[int]interface{})
	}
	swigDirectorTrack.c++
	ret := swigDirectorTrack.c
	swigDirectorTrack.m[ret] = v
	return ret
}

func swigDirectorLookup(c int) interface{} {
	swigDirectorTrack.Lock()
	defer swigDirectorTrack.Unlock()
	ret := swigDirectorTrack.m[c]
	if ret == nil {
		panic("C++ director pointer not found (possible	use-after-free)")
	}
	return ret
}

func swigDirectorDelete(c int) {
	swigDirectorTrack.Lock()
	defer swigDirectorTrack.Unlock()
	if swigDirectorTrack.m[c] == nil {
		if c > swigDirectorTrack.c {
			panic("C++ director pointer invalid (possible memory corruption")
		} else {
			panic("C++ director pointer not found (possible use-after-free)")
		}
	}
	delete(swigDirectorTrack.m, c)
}
